end cards have end reached = 1

when a card is placed check if the connecting cards have end reached = 1 and if they do, call spreadReach 

spreadReach marks the current card with reached =1 and calls itself on the connected path cards that have reached 0 and stops when there are no more cards to spread to or the start card is reached (aka end game)

when a card with reached 1 is destroyed, unspread marks all connected cards with reached =0 and checks the goal cards and calls spreadReach on the goal cards that have reached =0 

some optimisations could be: if there is only 1 node connected when launching unspread, just mark that node as 0, 
if there are 2 and that node is in a cycle, just mark that one (since it is in a cycle and only 2 neighbors => it does not connect the cycle to some other part of the graph as in the 1st drawing and it can be safely removed without unspread (a part of it is done, but not all and not marking the nodes yet) + spread (not done at all)


(end reached can be on 3 bits 1 bit for each goal)


MAD PAINT SKILZ
https://gyazo.com/ab8fc698d02600ad231943b9c04fc18b
https://gyazo.com/15b390dd0486e2db8d8a4587ab371058